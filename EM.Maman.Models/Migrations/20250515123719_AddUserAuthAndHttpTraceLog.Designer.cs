// <auto-generated />
using System;
using EM.Maman.Models.LocalDbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EM.Maman.Models.Migrations
{
    [DbContext(typeof(LocalMamanDBContext))]
    [Migration("20250515123719_AddUserAuthAndHttpTraceLog")]
    partial class AddUserAuthAndHttpTraceLog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Alert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ConfirmedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("ConfirmedToApi")
                        .HasColumnType("bit");

                    b.Property<string>("Content")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DownloadDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("WasDisplayed")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07C13F34DE");

                    b.ToTable("Alerts");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Cell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Depth")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsBlocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("IsBlockedReasonId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsSecuredStorage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("RefrigerationTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("Side")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Cells__3214EC074D1016A6");

                    b.HasIndex("Level");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.CellType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DisplayColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__CellType__3214EC07AACF101F");

                    b.ToTable("CellTypes");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActiveTrolleyId")
                        .HasColumnType("int");

                    b.Property<int>("CraneId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitializedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("('0001-01-01T00:00:00.0000000')");

                    b.Property<string>("InitializedByEmployeeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkstationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Configur__3214EC079B1E2953");

                    b.ToTable("Configurations");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Finger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DisplayColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("Side")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07767BB490");

                    b.ToTable("Fingers");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Level", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Levels__3214EC0796D8C15E");

                    b.HasIndex(new[] { "Number" }, "UQ_Levels_Number")
                        .IsUnique();

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Pallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AwbCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CargoHeight")
                        .HasColumnType("int");

                    b.Property<int?>("CargoType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CheckedOutDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ExportAwbAppearance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExportAwbNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExportAwbStorage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExportBarcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ExportSwbPrefix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("HeightLevel")
                        .HasColumnType("int");

                    b.Property<int?>("HeightType")
                        .HasColumnType("int");

                    b.Property<string>("ImportAppearance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportManifest")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImportUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsCheckedOut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsSecure")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RefrigerationType")
                        .HasColumnType("int");

                    b.Property<int>("ReportType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int?>("StorageType")
                        .HasColumnType("int");

                    b.Property<string>("UldAirline")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UldCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UldNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UldType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdateType")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Pallets__3214EC075B4002B5");

                    b.ToTable("Pallets");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.PalletInCell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("CellId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PalletId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StorageDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__PalletIn__3214EC0738C95D89");

                    b.ToTable("PalletInCell", (string)null);
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.PalletMovementLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("FromLocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("FromLocationTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PalletId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToLocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToLocationTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__PalletMo__3214EC07502484D2");

                    b.ToTable("PalletMovementLogs");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.PendingOperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CommandType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Parameters")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Parameters ");

                    b.Property<int?>("RetryCount")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__PendingO__3214EC0756C73109");

                    b.ToTable("PendingOperation", (string)null);
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.RefrigerationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DisplayColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07DD6A0605");

                    b.ToTable("RefrigerationTypes");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.StorageType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("int")
                        .HasColumnName("code");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DisplayColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07B2FB596A");

                    b.ToTable("StorageTypes");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActiveTaskStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<long?>("CellEndLocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("CurrentTrolleyLocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DownloadDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExecutedDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("FingerLocationId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsExecuted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsUploaded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PalletId")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<long?>("TaskTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UploadDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Tasks__3214EC0749F74CCB");

                    b.HasIndex(new[] { "CellEndLocationId" }, "IX_Tasks_CellEndLocationId");

                    b.HasIndex(new[] { "FingerLocationId" }, "IX_Tasks_FingerLocationId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.TaskDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long?>("DoneLocationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ExecutedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsExecuted")
                        .HasColumnType("bit");

                    b.Property<long?>("PalletId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__TaskDeta__3214EC07CEBCA418");

                    b.ToTable("TaskDetails");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.TaskLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("ReportedLocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TaskId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__TaskLogs__3214EC0722E0A04E");

                    b.ToTable("TaskLogs");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.TaskType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__TaskType__3214EC077981986E");

                    b.ToTable("TaskTypes");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.TraceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("DurationMs")
                        .HasColumnType("bigint");

                    b.Property<string>("RequestBody")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RequestMethod")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("RequestTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ResponseBody")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ResponseStatusCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("ResponseTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id")
                        .HasName("PK__TraceLog__3214EC074AE5E671");

                    b.ToTable("TraceLogs");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Trolley", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC0737E90462");

                    b.ToTable("Trolleys");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.TrolleyCell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("PalletId")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("StorageDate")
                        .HasColumnType("datetime");

                    b.Property<long>("TrolleyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__TrolleyC__3214EC07XXXXXXXX");

                    b.HasIndex("PalletId");

                    b.HasIndex("TrolleyId");

                    b.ToTable("TrolleyCells");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.TrolleyLoadingLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DisplayColor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Side")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long?>("TrolleyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07785E6850");

                    b.ToTable("TrolleyLoadingLocations");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.TrolleyMovementLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CompletedReasonId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<long?>("FromLocationId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsSuccessful")
                        .HasColumnType("bit");

                    b.Property<long?>("PlannedToLocationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ReportedToLocationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__TrolleyM__3214EC077DBF64AA");

                    b.ToTable("TrolleyMovementLogs");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.UploadTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("UploadType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC0781E6720C");

                    b.ToTable("UploadTasks");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BackendId")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC0763E2D4F3");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Cell", b =>
                {
                    b.HasOne("EM.Maman.Models.LocalDbModels.Level", "LevelNavigation")
                        .WithMany("Cells")
                        .HasForeignKey("Level")
                        .HasPrincipalKey("Number")
                        .HasConstraintName("FK_Cells_Levels");

                    b.Navigation("LevelNavigation");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Task", b =>
                {
                    b.HasOne("EM.Maman.Models.LocalDbModels.Cell", "CellEndLocation")
                        .WithMany("Tasks")
                        .HasForeignKey("CellEndLocationId");

                    b.HasOne("EM.Maman.Models.LocalDbModels.Finger", "FingerLocation")
                        .WithMany("Tasks")
                        .HasForeignKey("FingerLocationId");

                    b.Navigation("CellEndLocation");

                    b.Navigation("FingerLocation");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.TrolleyCell", b =>
                {
                    b.HasOne("EM.Maman.Models.LocalDbModels.Pallet", "Pallet")
                        .WithMany()
                        .HasForeignKey("PalletId")
                        .HasConstraintName("FK_TrolleyCells_Pallets");

                    b.HasOne("EM.Maman.Models.LocalDbModels.Trolley", "Trolley")
                        .WithMany("TrolleyCells")
                        .HasForeignKey("TrolleyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TrolleyCells_Trolleys");

                    b.Navigation("Pallet");

                    b.Navigation("Trolley");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Cell", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Finger", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Level", b =>
                {
                    b.Navigation("Cells");
                });

            modelBuilder.Entity("EM.Maman.Models.LocalDbModels.Trolley", b =>
                {
                    b.Navigation("TrolleyCells");
                });
#pragma warning restore 612, 618
        }
    }
}
